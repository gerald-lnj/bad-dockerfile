pipeline {
    agent any
    parameters {
        string(name: 'TAR_PATH', description: 'Path to the image archive')
        choice(name: 'REPORT_FORMAT', choices: ['JSON', 'HTML', 'SARIF'], description: 'Report format')
        credentials(name: 'BITDETECTOR_LICENSE', description: 'Bitdetector license', credentialType: "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl", required: true )
        credentials(name: 'GET_BITDETECTOR_RELEASE_CREDENTIAL', description: ' A Jenkins credential that contaains the PAT to fetch Bitdetector releases', credentialType: "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl", required: true )
    }

    stages {
        stage('Generate Docker Image archive') {
            steps {
                sh """
                docker build -t debug .
                docker save -o vuln-image.tar debug
                """
            }
        }
        stage('Scan') {
            environment { 
                GH_TOKEN = credentials('GET_BITDETECTOR_RELEASE_CREDENTIAL')
                GH_REPO = 'horangi-ir/bitdetector'
                BITDETECTOR_LICENSE = credentials('BITDETECTOR_LICENSE')
                REPORT_FILENAME = "report." + "${params.REPORT_FORMAT.toLowerCase()}"
                REPORT_NAME = "${env.JOB_BASE_NAME}" + '-' + "${env.BUILD_NUMBER}"
            }
            steps {
                echo "Setting up directory structure"
                sh """
                mkdir tmp && mkdir bitdetector
                """

                dir("bitdetector") {
                    echo "Pulling bitdetector release"
                    sh """
                    gh release -R horangi-ir/bitdetector download -p bitdetector_Linux_x86_64.tar.gz
                    tar -xzf bitdetector_Linux_x86_64.tar.gz
                    tar -xzf dependencies/ctc.tar.gz -C .
                    tree -L 3 .
                    echo ${env.JOB_BASE_NAME}
                    ./bitdetector filesystem \"${env.WORKSPACE}/$TAR_PATH\" -f $REPORT_FORMAT -p \"$REPORT_FILENAME\" -n \"$REPORT_NAME\"
                    cat $REPORT_FILENAME
                    """
                }
            }
        }
    }
}